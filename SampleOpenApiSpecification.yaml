openapi: 3.0.0
info:
  version: '1.0'
  title: 'Employee Service API'
  description: 'This service provides information about employees'
  termsOfService: https://example.com/terms
  contact:
    name: Karthikeyan Nithiyanandam
    url: https://www.linkedin.com/in/karthikeyan-nithiyanandam/
    email: karthikeyan.ng@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: 
  - url: https://dev.mysite.com
    description: Development Server
  - url: https://qa.mysite.com
    description: QA Server
  - url: https://prod.mysite.com
    description: Production Server 
paths:
  /v1/employess:
    get:
      responses:
        '200':
          description: List of Employees
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 100
                description: List of Employees
                items:
                  $ref: "#/components/schemas/Employee"
  /v1/beers:
    get:
      responses:
        '200':
          description: List of Beers
          content:
            application/json:
              schema:
                type: array
                description: List of Beers
                items:
                  type: object
                  description: Beer object
                  properties:
                    name:
                      type: string
                    style:
                      type: string
                      enum: [ALE, PALE_ALE, IPA, WHEAT, LAGER]
                    upc:
                      type: string
                    price:
                      type: number
                      format: double
                    quantity:
                      type: integer
                      format: int32
                    brewery:
                      type: object
                      properties:
                        name:
                          type: string
                        location:
                          type: string
        '400':
          description: Not Found
components:
  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: My address info
        city:
          type: string
          example: Chennai
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 2 letter state codes
          # we can represents enum in 2 different ways
          #enum: [TN, AP, KN, KL, GA, TS]  # 1st way
          enum:                            # 2nd way
            - TN
            - AP
            - KN
            - KL
            - GA
            - TS
        zipCode:
          type: string
          example: 123456
    Employee:
      type: object
      description: Employee object
      properties:
        id:
          type: string
          format: uuid
        firstname:
          type: string
          minLength: 2
          maxLength: 100
          example: Karthikeyan
        lastname:
          type: string
          minLength: 2
          maxLength: 100
          example: Nithiyanandam
        address:
          $ref: "#/components/schemas/Address"         
